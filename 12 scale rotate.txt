#include <graphics.h>
#include <conio.h>
#include <math.h>

void drawTriangle(int x1, int y1, int x2, int y2, int x3, int y3) {
    line(x1, y1, x2, y2);
    line(x2, y2, x3, y3);
    line(x3, y3, x1, y1);
}

void scaleTriangle(int x1, int y1, int x2, int y2, int x3, int y3, float sx, float sy) {
    x1 *= sx;
    y1 *= sy;
    x2 *= sx;
    y2 *= sy;
    x3 *= sx;
    y3 *= sy;

    drawTriangle(x1, y1, x2, y2, x3, y3);
}

void rotateTriangle(int x1, int y1, int x2, int y2, int x3, int y3, float angle) {
    float theta = angle * (3.14159 / 180.0);
    int x1_new = round(x1 * cos(theta) - y1 * sin(theta));
    int y1_new = round(x1 * sin(theta) + y1 * cos(theta));
    int x2_new = round(x2 * cos(theta) - y2 * sin(theta));
    int y2_new = round(x2 * sin(theta) + y2 * cos(theta));
    int x3_new = round(x3 * cos(theta) - y3 * sin(theta));
    int y3_new = round(x3 * sin(theta) + y3 * cos(theta));

    drawTriangle(x1_new, y1_new, x2_new, y2_new, x3_new, y3_new);
}

int main() {
    int gd = DETECT, gm;
    initgraph(&gd, &gm, "C:\\TurboC3\\BGI");

    // Original triangle coordinates
    int x1 = 100, y1 = 200;
    int x2 = 200, y2 = 100;
    int x3 = 300, y3 = 200;

    // Draw the original triangle
    drawTriangle(x1, y1, x2, y2, x3, y3);

    // Scaling factor
    float sx = 1.5, sy = 1.5;

    // Scale and draw the triangle
    scaleTriangle(x1, y1, x2, y2, x3, y3, sx, sy);

    // Rotation angle in degrees
    float angle = 45.0;

    // Rotate and draw the triangle
    rotateTriangle(x1, y1, x2, y2, x3, y3, angle);

    // Wait for a key press
    getch();

    // Close the graphics mode
    closegraph();

    return 0;
}
