#include <graphics.h>
#include <stdio.h>

// Function to draw a triangle
void drawTriangle(int x1, int y1, int x2, int y2, int x3, int y3, int color) {
    setcolor(color);
    line(x1, y1, x2, y2);
    line(x2, y2, x3, y3);
    line(x3, y3, x1, y1);
}

// Function to perform X shear transformation
void shearX(int &x, int &y, float shx) {
    x = x + shx * y;
}

// Function to perform Y shear transformation
void shearY(int &x, int &y, float shy) {
    y = y + shy * x;
}

int main() {
    int gd = DETECT, gm;
    initgraph(&gd, &gm, NULL);

    // Original triangle vertices
    int x1 = 100, y1 = 100;
    int x2 = 150, y2 = 50;
    int x3 = 200, y3 = 100;

    // Draw original triangle
    drawTriangle(x1, y1, x2, y2, x3, y3, WHITE);
    delay(2000); // Delay to show the original triangle

    // Shear factors
    float shx = 1.0, shy = 0.5;

    // Apply X shear transformation
    int x1_shearX = x1, y1_shearX = y1;
    int x2_shearX = x2, y2_shearX = y2;
    int x3_shearX = x3, y3_shearX = y3;

    shearX(x1_shearX, y1_shearX, shx);
    shearX(x2_shearX, y2_shearX, shx);
    shearX(x3_shearX, y3_shearX, shx);

    // Draw triangle after X shear (RED)
    drawTriangle(x1_shearX, y1_shearX, x2_shearX, y2_shearX, x3_shearX, y3_shearX, RED);
    delay(2000); // Delay to show the X shear

    // Apply Y shear transformation
    int x1_shearY = x1, y1_shearY = y1;
    int x2_shearY = x2, y2_shearY = y2;
    int x3_shearY = x3, y3_shearY = y3;

    shearY(x1_shearY, y1_shearY, shy);
    shearY(x2_shearY, y2_shearY, shy);
    shearY(x3_shearY, y3_shearY, shy);

    // Draw triangle after Y shear (GREEN)
    drawTriangle(x1_shearY, y1_shearY, x2_shearY, y2_shearY, x3_shearY, y3_shearY, GREEN);
    delay(2000); // Delay to show the Y shear

    // Wait for a key press
    getch();

    // Close the graphics mode
    closegraph();

    return 0;
}
